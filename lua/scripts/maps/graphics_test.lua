--------------------------------------------------------------------------------
-- graphics_test.lua
--
-- A simple map with one player sprite on a distinct visual layer of tiles. Used for debugging purposes.
--------------------------------------------------------------------------------
local ns = {}
setmetatable(ns, {__index = _G})
graphics_test = ns;
setfenv(1, ns);

-- Set to true to turn on debugging messages generated by this map script
DEBUG = true;

data_file = "lua/data/maps/graphics_test.lua";
location_filename = "img/portraits/locations/blank.png";
map_name = "Graphics Test";

sound_filenames = {};

music_filenames = {};

-- Primary Map Classes
Map = {};
LocalRecords = {};
GlobalRecords = {};
DialogueManager = {};
EventManager = {};
ObjectManager = {};
TileManager = {};
TreasureManager = {};
TransitionManager= {};

-- All custom map functions are contained within the following table.
-- String keys in this table serves as the names of these functions.
functions = {};

function Load(m)
	Map = m;
	LocalRecords = Map.local_record_group;
	GlobalRecords = Map.global_record_group;
	DialogueManager = Map.dialogue_supervisor;
	EventManager = Map.event_supervisor;
	ObjectManager = Map.object_supervisor;
	TileManager = Map.tile_supervisor;
	TransitionManager = Map.transition_supervisor;
	TreasureManager = Map.treasure_supervisor;

	-- Setup the order in which we wish to draw the tile and object layers
	Map:ClearLayerOrder();
	Map:AddTileLayerToOrder(0);
	Map:AddTileLayerToOrder(1);
	Map:AddTileLayerToOrder(2);
	Map:AddObjectLayerToOrder(0);
	Map:AddTileLayerToOrder(3);

	CreateObjects();
	CreateSprites();
	CreateDialogues();
	CreateEvents();

	Map:DisableIntroductionVisuals();
	Map.unlimited_stamina = true;
	Map:ShowStaminaBar(false);
	Map:ShowDialogueIcons(true);


	Map:SetCamera(sprites["claudius"]);
	IfPrintDebug(DEBUG, "Map loading complete");
end -- Load(m)



function Update()
	-- Nothing required
end



function Draw()
	Map:DrawMapLayers();
end



function CreateObjects()
end



function CreateSprites()
	IfPrintDebug(DEBUG, "Creating sprites...");

	sprites["claudius"] = ConstructSprite("Claudius", 1, 20, 20);
	sprites["claudius"]:SetDirection(hoa_map.MapMode.NORTH);
end -- function CreateSprites()



function CreateDialogues()
end -- function CreateDialogues()


-- Creates all events and sets up the entire event sequence chain
function CreateEvents()
end -- function CreateEvents()

